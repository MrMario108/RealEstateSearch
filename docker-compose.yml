version: '3.12'

services:
  app:
    restart: unless-stopped
    build:
      context: .
    ports:
      - 8000:8000
    volumes:
      - ./RealEstateSearch:/RealEstateSearch
      - ./data/web:/vol/web
    env_file:
      - ./.env.sample
    depends_on:
      - db
    command:
      sh -c "python manage.py wait_for_db &&
            python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
  worker:
    restart: unless-stopped
    build:
      context: .
      #dockerfile: ./dockerfile
    entrypoint: /scripts/worker-entrypoint.sh
    volumes:
      - ./RealEstateSearch:/RealEstateSearch
    env_file:
      - ./.env.sample
    depends_on:
      - app
      - redis
  celery-beat:
    restart: unless-stopped
    build: 
      context: .
      dockerfile: ./dockerfile
    command: celery -A realEstateSearch.celery beat -l info
    #entrypoint: /scripts/beat-entrypoint.sh
    volumes:
      - ./RealEstateSearch:/RealEstateSearch
    env_file:
      - ./.env.sample
    depends_on:
      - db
      - app
      - worker
      - redis
  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine 
  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=rootuser
      - POSTGRES_USER=rootuser
      - POSTGRES_PASSWORD=rootuser

volumes:
    static_volume: {}
    postgres_data: {}